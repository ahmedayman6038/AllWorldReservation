<div class="col-9">
    <div class="row">
        <div class="contents col-12">
            <div class="col-md-12">
                <h3>Hosted Checkout</h3>
                <p>The Hosted Checkout model allows you to collect payment details from your payer through an interaction hosted and displayed by the Payment Gateway. This means you aren't responsible for handling sensitive PCI data.</p>
                <p>Hosted Checkout can be implemented as:</p>
                <div class="container mt-5">
                    <div class="row">
                        <div class="col">
                            <h5>Lightbox</h5>
                            <ul class="my-4">
                                <li>Opens modal; doesn't redirect away from merchant site</li>
                                <li>Seamless checkout experience</li>
                            </ul>
                            <input id="lightbox-with-session" type="button" class="btn btn-primary mr-2" value="Pay with Lightbox" onclick="Checkout.showLightbox();" />
                        </div>
                        <div class="col">
                            <h5>Payment Page</h5>
                            <ul class="my-4">
                                <li>Redirects to Gateway-hosted payment page</li>
                                <li>Ideal if your site isn't SSL-secured</li>
                            </ul>
                            <input id="page-with-session" type="button" class="btn btn-primary" value="Pay with Payment Page" onclick="Checkout.showPaymentPage();" />
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div> <!-- row -->
</div>
<script src="@ViewBag.CheckoutJsUrl"
        data-error="errorCallback"
        data-cancel="cancelCallback"
        data-beforeRedirect="beforeRedirect"
        data-afterRedirect="afterRedirect"
        data-complete="completeCallback"> 
</script>
<script>

    /*<![CDATA[*/
        var merchantId = "@ViewBag.MerchantId";
        var sessionId = "@ViewBag.CheckoutSession.Id";
        var sessionVersion = "@ViewBag.CheckoutSession.Version";
        var successIndicator = "@ViewBag.CheckoutSession.SuccessIndicator";
        var orderId = "@ViewBag.OrderId";
        var currency = "@ViewBag.Currency";
    /*]]>*/
        var resultIndicator = null;

    // This method preserves the current state of successIndicator and orderId, so they're not overwritten when we return to this page after redirect
    function beforeRedirect() {
    console.log("beforeRedirect");
        return {
            successIndicator: successIndicator,
            orderId: orderId
        };
    }

    // This method is specifically for the full payment page option. Because we leave this page and return to it, we need to preserve the
    // state of successIndicator and orderId using the beforeRedirect/afterRedirect option
    function afterRedirect(data) {
        console.log("afterRedirect", data);
        // Compare with the resultIndicator saved in the completeCallback() method
        if(resultIndicator === "CANCELED"){
            return;
        }    
        else if (resultIndicator) {
            var result = (resultIndicator === data.successIndicator) ? "SUCCESS" : "ERROR";
            window.location.href = "/hostedCheckout/" + data.orderId + "/" + result;
        }
        else {
            successIndicator = data.successIndicator;
            orderId = data.orderId;
            sessionId = data.sessionId;
            sessionVersion = data.sessionVersion;
            merchantId = data.merchantId;

            window.location.href = "/hostedCheckout/" + data.orderId + "/" + data.successIndicator + "/" + data.sessionId;
        }
    
    }

    function errorCallback(error) {
        var message = JSON.stringify(error);
        $("#loading-bar-spinner").hide();
        var $errorAlert = $('#error-alert');
        console.log(message);
        $errorAlert.append("<p>" + message + "</p>");
        $errorAlert.show();
    }
    function cancelCallback() {
        console.log('Payment cancelled');
        resultIndicator = "CANCELED" ;
        // Reload the page to generate a new session ID - the old one is out of date as soon as the lightbox is invoked
        window.location.reload(true);
    }

    // This handles the response from Hosted Checkout and redirects to the appropriate endpoint
    function completeCallback(response) {
        console.log("completeCallback", response);
        // Save the resultIndicator
        resultIndicator = response;
        var result = (resultIndicator === successIndicator) ? "SUCCESS" : "ERROR";

        window.location.href = "/hostedCheckout/" + orderId + "/" + result;
    }

    Checkout.configure({
        merchant: merchantId,
        order: {
            amount: function() {
                //Dynamic calculation of amount
                return 80 + 20;
            },
            currency: currency,
            description: 'Ordered goods'
        },
        session: {
            id: sessionId
        },
        interaction: {
            merchant: {
                name: 'Merchant Name',
                address: {
                    line1: '200 Sample St',
                    line2: '1234 Example Town'
                }
            }
        }
    });
</script>
